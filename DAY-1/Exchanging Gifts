#include <iostream>
#include <vector>
using namespace std;

int findYoungestMember(int n, int m, vector<pair<int, int>> &gifts) {
    vector<int> received(n + 1, 0); // Track received gifts
    vector<int> given(n + 1, 0);    // Track given gifts

    for (auto &gift : gifts) {
        int giver = gift.first, receiver = gift.second;
        given[giver]++;       // Track that this person gave a gift
        received[receiver]++; // Track that this person received a gift
    }

    int youngest = -1;
    int count = 0; // Count of youngest candidates

    for (int i = 1; i <= n; i++) {
        if (received[i] > 0 && given[i] == 0) { // Valid youngest candidate
            if (youngest != -1) {
                cout << "-1" << endl; // More than one valid youngest found
                return 0;
            }
            youngest = i;
        }
    }

    cout << (youngest != -1 ? youngest : -1) << endl; // Print youngest or -1
    return 0;
}

int main() {
    int n, m;
    cin >> n >> m;
    vector<pair<int, int>> gifts(m);

    for (int i = 0; i < m; i++) {
        cin >> gifts[i].first >> gifts[i].second;
    }

    findYoungestMember(n, m, gifts);
    return 0;
}
